#!/usr/bin/env sh
# Copyright Martin VÃ¤th <martin@mvath.de>.
# This is part of the schedule project.

# Honour a possible first option:
remain='set-option set-remain-on-exit on ;'
case $1 in
--no-remain|--noremain|-R)
	remain=
	shift;;
--remain|-r)
	shift;;
esac

# First check whether the command is appropriate and possibly print manpage:
schedule --check "$@"
status=$?
[ $status -eq 6 ] || exit $status

# We quote the arguments, since tmux wants only a shell-escaped parameter:
cmd=`schedule quote "$@"`

# To avoid a possible race, we setup a task in the background which will wait:
tmux wait-for $$ &

# Now we open a new window in which we output the command and run schedule
# with a value of -a which will end our waiting task above.

tmux $remain new-window -d "schedule quote $cmd
schedule -a \"tmux wait-for -S $$\" $cmd"

# Now we wait for the end of our above task: When this task finishes,
# we can be sure that the passed command has been queued.
# Without waiting, subsequent calls of schedule-tmux in some script
# cannot be guaranteed to queue the commands in the "correct" order.
wait
